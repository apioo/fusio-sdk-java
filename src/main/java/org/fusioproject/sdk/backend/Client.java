/**
 * Client automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */

package org.fusioproject.sdk.backend;

import app.sdkgen.client.ClientAbstract;
import app.sdkgen.client.Credentials.*;
import app.sdkgen.client.CredentialsInterface;
import app.sdkgen.client.Exception.Authenticator.InvalidCredentialsException;
import app.sdkgen.client.Exception.ClientException;
import app.sdkgen.client.Exception.UnknownStatusCodeException;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.*;
import org.apache.http.client.utils.URIBuilder;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.StringEntity;
import org.apache.http.util.EntityUtils;

import java.io.IOException;
import java.net.URISyntaxException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Map;

public class Client extends ClientAbstract {
    public Client(String baseUrl, CredentialsInterface credentials) throws InvalidCredentialsException {
        super(baseUrl, credentials);
    }

    public UserTag user()
    {
        return new UserTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public TrashTag trash()
    {
        return new TrashTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public TransactionTag transaction()
    {
        return new TransactionTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public StatisticTag statistic()
    {
        return new StatisticTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public SdkTag sdk()
    {
        return new SdkTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public ScopeTag scope()
    {
        return new ScopeTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public SchemaTag schema()
    {
        return new SchemaTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public OperationTag operation()
    {
        return new OperationTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public RoleTag role()
    {
        return new RoleTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public RateTag rate()
    {
        return new RateTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public PlanTag plan()
    {
        return new PlanTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public PageTag page()
    {
        return new PageTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public MarketplaceTag marketplace()
    {
        return new MarketplaceTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public LogTag log()
    {
        return new LogTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public GeneratorTag generator()
    {
        return new GeneratorTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public EventTag event()
    {
        return new EventTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public DashboardTag dashboard()
    {
        return new DashboardTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public CronjobTag cronjob()
    {
        return new CronjobTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public ConnectionTag connection()
    {
        return new ConnectionTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public ConfigTag config()
    {
        return new ConfigTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public CategoryTag category()
    {
        return new CategoryTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public AuditTag audit()
    {
        return new AuditTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public AppTag app()
    {
        return new AppTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public ActionTag action()
    {
        return new ActionTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }

    public AccountTag account()
    {
        return new AccountTag(
            this.httpClient,
            this.objectMapper,
            this.parser
        );
    }



}
